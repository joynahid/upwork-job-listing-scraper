services:
  postgres:
    image: postgres:16-alpine
    container_name: upwork-postgres-api
    environment:
      - POSTGRES_DB=upwork_jobs
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - upwork-network

  upwork-job-api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: upwork-job-api
    ports:
      - "8080:8080"
    environment:
      - API_KEY=${API_KEY:-your-secret-api-key-here}
      - PORT=8080
      # PostgreSQL configuration
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=upwork_jobs
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      # Optional: Mount logs directory if needed
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "--header=X-API-KEY: ${API_KEY:-your-secret-api-key-here}", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - upwork-network

volumes:
  postgres_data:
    driver: local

networks:
  upwork-network:
    driver: bridge
